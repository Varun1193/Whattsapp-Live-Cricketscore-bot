import requests

from datetime import datetime

class ScoreGet:

    def __init__(self):

        """

        Declaring the endpoints, apikey

        """

        self.url_get_all_matches = "http://cricapi.com/api/matches"

        self.url_get_score="http://cricapi.com/api/cricketScore"

        self.api_key = "kZs6R72whTb0trIcvSlCBKxPPOr1"

        self.unique_id = ""  # unique to every match

       ''''
       EXTRACTING THE UNIQUE ID OF THE MATCH WE ARE INTERESTED IN
       '''''

    def get_unique_id(self):

        """

        Returns Indian cricket teams match id, if the match is Live

        :return:

        """

        uri_params = {"apikey": self.api_key}

        resp = requests.get(self.url_get_all_matches, params=uri_params)

        resp_dict = resp.json()

        uid_found=0

        for i in resp_dict['matches']:

            if (i['team-1'] == "NAME OF THE TEAM" or i['team-2'] == "NAME OF THE TEAM") and i['matchStarted']:

                

                todays_date = "DATE YOU ARE INTERESTED IN"

                if todays_date == i['date'].split("T")[0]:

                    uid_found=1

                    self.unique_id=i['unique_id']

                    print(self.unique_id)

                    break

        if not uid_found:

            self.unique_id=-1



        send_data=self.get_score(self.unique_id)
        print(send_data)

        return send_data

'''''
EXTRACTING THE SCORE OF THE MATCH USING THE UNIQUE ID
'''''



    def get_score(self,unique_id):

        data="" #stores the cricket match data

        if unique_id == -1:

            data="No matches today"
 
        else:

            uri_params = {"apikey": self.api_key, "unique_id": self.unique_id}

            resp=requests.get(self.url_get_score,params=uri_params)

            data_json=resp.json()

            #print(data_json)

            try:

                data="Here's the score : "+ "\n" + data_json['stat'] +'\n' + data_json['score']

            except KeyError as e:

                data="Something went wrong"

        return data




''''''
LINKING SENDER NETWORK WITH THE RECIEVER ID USING TWILIO ID AND SENDIGN THE TEXT
''''''


if __name__ == "__main__":

    obj_score=ScoreGet()
    text=obj_score.get_unique_id()
    from twilio.rest import Client
    a_sid="NETWORK ID OF THE RECIEVER"
    auth_token="NETWORK ID OF THE SENDER"
    client=Client(a_sid,auth_token)
    message=client.messages.create(body=text,from_='whatsapp:+14155238886',to='whatsapp:+CONTACT NO OF THE RECIEVER')


